{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\ufood-app\\\\src\\\\Store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from './CartContext';\nimport { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  amount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'add') {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.items.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'add',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'remove',\n      id: id\n    });\n  };\n\n  const cartcontext = {\n    items: cartState.items,\n    amount: cartState.amount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartcontext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/ufood-app/src/Store/CartProvider.js"],"names":["CartContext","useReducer","defaultCartState","items","amount","cartReducer","state","action","type","updatedItems","concat","item","updatedTotalAmount","totalAmount","price","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","id","cartcontext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,MAAM,EAAE;AAFa,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvC,MAAGA,MAAM,CAACC,IAAP,KAAc,KAAjB,EAAuB;AACnB,UAAMC,YAAY,GAACH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAAnB;AACA,UAAMC,kBAAkB,GAACN,KAAK,CAAEO,WAAP,GAAmBN,MAAM,CAACJ,KAAP,CAAaW,KAAb,GAAmBP,MAAM,CAACI,IAAP,CAAYP,MAA3E;AACA,WAAM;AACFD,MAAAA,KAAK,EAACM,YADJ;AAEFI,MAAAA,WAAW,EAACD;AAFV,KAAN;AAIH;;AACG,SAAOV,gBAAP;AACH,CAVD;;AAWA,MAAMa,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAE5B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCjB,UAAU,CAACI,WAAD,EAAcH,gBAAd,CAAlD;;AAEA,QAAMiB,oBAAoB,GAAIR,IAAD,IAAU;AACnCO,IAAAA,kBAAkB,CAAC;AAAEV,MAAAA,IAAI,EAAE,KAAR;AAAeG,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMS,yBAAyB,GAAIC,EAAD,IAAQ;AACtCH,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAC,QAAN;AAAea,MAAAA,EAAE,EAACA;AAAlB,KAAD,CAAlB;AACH,GAFD;;AAGA,QAAMC,WAAW,GAAG;AAChBnB,IAAAA,KAAK,EAAEc,SAAS,CAACd,KADD;AAEhBC,IAAAA,MAAM,EAAEa,SAAS,CAACb,MAFF;AAGhBmB,IAAAA,OAAO,EAAEJ,oBAHO;AAIhBK,IAAAA,UAAU,EAAEJ;AAJI,GAApB;AAMA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACKN,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAtBD;;GAAMV,Y;;KAAAA,Y;AAwBN,eAAeA,YAAf","sourcesContent":["import CartContext from './CartContext'\r\nimport { useReducer } from 'react';\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    amount: 0\r\n}\r\n\r\nconst cartReducer = (state, action) => {\r\nif(action.type==='add'){\r\n    const updatedItems=state.items.concat(action.item)\r\n    const updatedTotalAmount=state. totalAmount+action.items.price*action.item.amount;\r\n    return{\r\n        items:updatedItems,\r\n        totalAmount:updatedTotalAmount\r\n    }\r\n}\r\n    return defaultCartState;\r\n};\r\nconst CartProvider = (props) => {\r\n\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState)\r\n\r\n    const addItemToCartHandler = (item) => {\r\n        dispatchCartAction({ type: 'add', item: item })\r\n    };\r\n\r\n    const removeItemFromCartHandler = (id) => { \r\n        dispatchCartAction({type:'remove',id:id})\r\n    };\r\n    const cartcontext = {\r\n        items: cartState.items,\r\n        amount: cartState.amount,\r\n        addItem: addItemToCartHandler,\r\n        removeItem: removeItemFromCartHandler\r\n    }\r\n    return (\r\n        <CartContext.Provider value={cartcontext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CartProvider\r\n"]},"metadata":{},"sourceType":"module"}